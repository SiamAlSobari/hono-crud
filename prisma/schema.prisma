// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Roles {
  admin
  user
}

model User {
  id String @unique @id @default(uuid())
  email String @unique
  password String
  role Roles @default(user)
  
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  profile Profile? 
  posts Post[]
}

model Profile {
  id String @unique @id @default(uuid())
  name String 
  caption String? @db.Text
  avatar_url String @default("https://static.vecteezy.com/system/resources/thumbnails/003/337/584/small/default-avatar-photo-placeholder-profile-icon-vector.jpg")
  user_id String @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [user_id],references: [id],onDelete: Cascade)

  @@index([user_id])
}

model Post {
  id String @unique @id @default(uuid())
  description String? @db.Text
  title  String? @db.Text
  user_id String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  medias Media[]

  user User @relation(fields: [user_id],references: [id])

  @@index([user_id])
}

model Media {
  id String @unique @id @default(uuid())
  media_url String
  type String
  post_id String

  post Post @relation(fields: [post_id],references: [id],onDelete: Cascade)

  @@index([post_id])  
}


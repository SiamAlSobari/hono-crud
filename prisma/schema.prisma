// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Roles {
  admin
  user
}

model User {
  id       String @id @unique @default(uuid())
  email    String @unique
  password String
  role     Roles  @default(user)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  profile Profile?
  posts   Post[]
}

model Profile {
  id         String  @id @unique @default(uuid())
  name       String
  caption    String? @db.Text
  avatar_url String  @default("https://static.vecteezy.com/system/resources/thumbnails/003/337/584/small/default-avatar-photo-placeholder-profile-icon-vector.jpg")
  user_id    String  @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model Post {
  id             String   @id @unique @default(uuid())
  description    String?  @db.Text
  title          String?  @db.Text
  user_id        String
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  tumbnail_image String

  medias Media?

  user         User           @relation(fields: [user_id], references: [id])
  postCategory PostCategory[]

  @@index([user_id])
}

model Media {
  id        String @id @unique @default(uuid())
  media_url String
  type      String
  post_id   String @unique

  post Post @relation(fields: [post_id], references: [id], onDelete: Cascade)

  @@index([post_id])
}

model Category {
  id         String   @id @unique @default(uuid())
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  postsCategory PostCategory[]
}

model PostCategory {
  post_id     String
  category_id String

  category Category @relation(fields: [category_id], references: [id], onDelete: Cascade)
  post     Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)

  @@id([post_id, category_id])
}
